[
  {
    "id": 1,
    "question": "JavaScript에서 === 연산자의 의미는?",
    "options": ["값만 비교", "타입만 비교", "값과 타입 모두 비교", "할당 연산자"],
    "answer": 2,
    "explanation": "===는 값과 타입을 모두 비교하는 엄격한 비교 연산자입니다."
  },
  {
    "id": 2,
    "question": "HTML에서 시맨틱 태그가 아닌 것은?",
    "options": ["section", "article", "div", "header"],
    "answer": 2,
    "explanation": "div는 시맨틱 의미가 없는 일반 컨테이너입니다."
  },
  {
    "id": 3,
    "question": "CSS에서 flex-direction: column을 사용하면 어떤 방향으로 정렬되나요?",
    "options": ["수평 방향", "수직 방향", "왼쪽에서 오른쪽", "오른쪽에서 왼쪽"],
    "answer": 1,
    "explanation": "column은 요소를 수직 방향으로 배치합니다."
  },
  {
    "id": 4,
    "question": "JavaScript에서 'undefined'와 'null'의 차이는?",
    "options": [
      "같은 값이다",
      "undefined는 정의되지 않음, null은 비어있음을 명시",
      "둘 다 객체다",
      "둘 다 숫자다"
    ],
    "answer": 1,
    "explanation": "undefined는 변수에 값이 할당되지 않은 상태, null은 의도적으로 비어있음을 의미합니다."
  },
  {
    "id": 5,
    "question": "React에서 상태 관리를 위해 사용하는 Hook은?",
    "options": ["useEffect", "useState", "useParams", "useRef"],
    "answer": 1,
    "explanation": "useState는 컴포넌트 상태를 정의하는 데 사용됩니다."
  },
  {
    "id": 6,
    "question": "브라우저에서 HTML 요소를 JavaScript로 조작할 때 사용하는 객체는?",
    "options": ["DOM", "BOM", "JSON", "XML"],
    "answer": 0,
    "explanation": "DOM(Document Object Model)은 문서 구조를 제어하는 객체입니다."
  },
  {
    "id": 7,
    "question": "React 컴포넌트가 처음 렌더링되었을 때 한 번 실행되는 Hook은?",
    "options": ["useState", "useRef", "useEffect", "useCallback"],
    "answer": 2,
    "explanation": "useEffect에 빈 배열([])을 두면 마운트 시 한 번만 실행됩니다."
  },
  {
    "id": 8,
    "question": "CSS에서 특정 클래스가 hover 되었을 때 효과를 주려면?",
    "options": [".btn:hover", ".btn.hover", "#btn hover", "btn:hover"],
    "answer": 0,
    "explanation": ":hover는 요소에 마우스를 올렸을 때의 상태를 의미합니다."
  },
  {
    "id": 9,
    "question": "React에서 key 속성을 사용하는 주된 이유는?",
    "options": [
      "스타일 적용",
      "컴포넌트 속도 향상",
      "리스트에서 항목 구분",
      "state 초기화"
    ],
    "answer": 2,
    "explanation": "key는 리스트 렌더링 시 항목을 고유하게 구분하기 위해 사용됩니다."
  },
  {
    "id": 10,
    "question": "JavaScript에서 const로 선언된 변수는?",
    "options": [
      "값 변경이 가능하다",
      "재할당이 가능하다",
      "재선언이 가능하다",
      "재할당은 불가능하지만 객체 내부 변경은 가능하다"
    ],
    "answer": 3,
    "explanation": "const는 재할당은 불가능하지만 참조형의 내부 값 변경은 가능합니다."
  },
  {
    "id": 11,
    "question": "HTML의 input 요소에서 type='number'는 어떤 기능을 제공하나요?",
    "options": [
      "숫자 입력만 가능하게 제한",
      "비밀번호 입력",
      "이메일 형식 검증",
      "자동 소문자 변환"
    ],
    "answer": 0,
    "explanation": "type='number'는 숫자만 입력할 수 있도록 제한하는 역할을 합니다."
  },
  {
    "id": 12,
    "question": "JavaScript에서 배열을 얕은 복사할 때 사용하는 메서드는?",
    "options": ["splice()", "slice()", "pop()", "filter()"],
    "answer": 1,
    "explanation": "slice()는 배열의 일부를 복사하여 새로운 배열을 생성합니다."
  },
  {
    "id": 13,
    "question": "React에서 props는 무엇을 의미하나요?",
    "options": [
      "컴포넌트의 상태",
      "이벤트 핸들러",
      "부모 컴포넌트가 자식에게 전달하는 값",
      "페이지 경로"
    ],
    "answer": 2,
    "explanation": "props는 부모 컴포넌트가 자식에게 전달하는 데이터입니다."
  },
  {
    "id": 14,
    "question": "다음 중 JavaScript의 동기/비동기 처리와 관련 있는 키워드는?",
    "options": ["await", "import", "export", "return"],
    "answer": 0,
    "explanation": "await는 비동기 처리에서 Promise가 완료될 때까지 기다립니다."
  },
  {
    "id": 15,
    "question": "CSS Grid의 행 간격을 설정하는 속성은?",
    "options": ["column-gap", "grid-gap", "row-gap", "gap-row"],
    "answer": 2,
    "explanation": "row-gap은 행 사이의 간격을 설정합니다."
  },
  {
    "id": 16,
    "question": "React에서 컴포넌트가 다시 렌더링 되는 조건은?",
    "options": [
      "같은 props를 받을 때",
      "state가 변경되었을 때",
      "import가 변경되었을 때",
      "컴파일할 때"
    ],
    "answer": 1,
    "explanation": "state나 props가 변경되면 React는 컴포넌트를 다시 렌더링합니다."
  },
  {
    "id": 17,
    "question": "TypeScript에서 '?' 기호는 어떤 의미인가요?",
    "options": [
      "옵셔널 체이닝",
      "함수의 실행",
      "undefined 강제 처리",
      "조건문"
    ],
    "answer": 0,
    "explanation": "?는 옵셔널 체이닝 또는 선택적 프로퍼티를 의미합니다."
  },
  {
    "id": 18,
    "question": "JavaScript에서 NaN은 어떤 뜻인가요?",
    "options": [
      "Not a Name",
      "Not a Node",
      "Not a Number",
      "No assigned Name"
    ],
    "answer": 2,
    "explanation": "NaN은 'Not a Number'의 줄임말로 숫자가 아님을 뜻합니다."
  },
  {
    "id": 19,
    "question": "React에서 컴포넌트가 DOM에 처음 마운트될 때 실행되는 훅은?",
    "options": [
      "useMemo",
      "useLayoutEffect",
      "useEffect",
      "useCallback"
    ],
    "answer": 2,
    "explanation": "useEffect 훅은 컴포넌트 마운트 시 실행됩니다."
  },
  {
    "id": 20,
    "question": "JavaScript에서 객체를 구조 분해 할당할 때 사용하는 문법은?",
    "options": [
      "let a = obj[a]",
      "const {a, b} = obj",
      "obj.assign()",
      "import {a} from obj"
    ],
    "answer": 1,
    "explanation": "const {a, b} = obj는 구조 분해 할당 문법입니다."
  }
]
